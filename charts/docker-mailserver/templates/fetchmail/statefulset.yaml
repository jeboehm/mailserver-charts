---

apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "docker-mailserver.fetchmail" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: fetchmail
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.fetchmail.replicaCount }}
  {{- if .Values.fetchmail.updateStrategy }}
  updateStrategy: {{- toYaml .Values.fetchmail.updateStrategy | nindent 4 }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.fetchmail.podLabels .Values.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: fetchmail
  template:
    metadata:
      {{- if .Values.fetchmail.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.fetchmail.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: fetchmail
    spec:
      {{- include "docker-mailserver.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.fetchmail.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.fetchmail.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.fetchmail.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.fetchmail.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.fetchmail.podAffinityPreset "component" "fetchmail" "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.fetchmail.podAntiAffinityPreset "component" "fetchmail" "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.fetchmail.nodeAffinityPreset.type "key" .Values.fetchmail.nodeAffinityPreset.key "values" .Values.fetchmail.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.fetchmail.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.fetchmail.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.fetchmail.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.fetchmail.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.fetchmail.schedulerName }}
      schedulerName: {{ .Values.fetchmail.schedulerName }}
      {{- end }}
      {{- if .Values.fetchmail.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.controller.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.fetchmail.priorityClassName }}
      priorityClassName: {{ .Values.fetchmail.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.fetchmail.runtimeClassName }}
      runtimeClassName: {{ .Values.fetchmail.runtimeClassName }}
      {{- end }}
      {{- if .Values.fetchmail.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.fetchmail.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: fetchmailmgr
          image: {{ include "docker-mailserver.fetchmail.image" . }}
          imagePullPolicy: {{ .Values.fetchmail.image.pullPolicy }}
          {{- if .Values.fetchmail.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.fetchmail.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.fetchmail.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.fetchmail.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          args:
            - --interval
            - {{ .Values.fetchmail.interval }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            {{- include "docker-mailserver.databaseEnvs" . | nindent 12 }}
            {{- if .Values.fetchmail.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.fetchmail.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.fetchmail.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.fetchmail.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.fetchmail.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.fetchmail.extraEnvVarsSecret "context" $) }}
            {{- end }}
            - configMapRef:
                name: {{ printf "%s-configenv" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
          {{- if .Values.fetchmail.resources }}
          resources: {{- toYaml .Values.fetchmail.resources | nindent 12 }}
          {{- else if ne .Values.fetchmail.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.fetchmail.resourcesPreset) | nindent 12 }}
          {{- end }}
          {{- if .Values.fetchmail.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.fetchmail.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.fetchmail.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000
            initialDelaySeconds: {{ .Values.fetchmail.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.fetchmail.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.fetchmail.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.fetchmail.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.fetchmail.livenessProbe.failureThreshold }}
          {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: /run/fetchmailmgr
          {{- if .Values.fetchmail.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.fetchmail.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        {{- if .Values.fetchmail.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.fetchmail.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
